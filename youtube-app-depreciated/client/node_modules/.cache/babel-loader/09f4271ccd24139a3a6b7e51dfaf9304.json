{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cristinalawson/CS179G/youtube-app/client/src/pages/MoviesInsert.jsx\";\nimport React, { Component } from 'react';\nimport api from '../api';\nimport Dropzone from 'react-dropzone'; //import { useSelector } from \"react-redux\";\n\nimport styled from 'styled-components';\nconst Title = styled.h1.attrs({\n  className: 'h1'\n})``;\n_c = Title;\nconst Wrapper = styled.div.attrs({\n  className: 'form-group'\n})`\n    margin: 0 30px;\n`;\n_c2 = Wrapper;\nconst Label = styled.label`\n    margin: 5px;\n`;\n_c3 = Label;\nconst InputText = styled.input.attrs({\n  className: 'form-control'\n})`\n    margin: 5px;\n`;\n_c4 = InputText;\nconst Button = styled.button.attrs({\n  className: `btn btn-primary`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c5 = Button;\nconst CancelButton = styled.a.attrs({\n  className: `btn btn-danger`\n})`\n    margin: 15px 15px 15px 5px;\n`;\n_c6 = CancelButton;\n\nclass MoviesInsert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputName = async event => {\n      const name = event.target.value;\n      this.setState({\n        name\n      });\n    };\n\n    this.handleChangeInputRating = async event => {\n      const rating = event.target.validity.valid ? event.target.value : this.state.rating;\n      this.setState({\n        rating\n      });\n    };\n\n    this.handleChangeInputDescription = async event => {\n      const description = event.target.value;\n      this.setState({\n        description\n      });\n    };\n\n    this.handleChangeInputKeywords = async event => {\n      const keywords = event.target.value;\n      this.setState({\n        keywords\n      });\n    };\n\n    this.handleChangeInputTime = async event => {\n      const time = event.target.value;\n      this.setState({\n        time\n      });\n    };\n\n    this.handleChangeInputVideo = async event => {\n      const video = event.target.value;\n      this.setState({\n        video\n      }); //    let formData = new FormData();\n      //    const config = {\n      //        header: { 'content-type': 'multipart/form-data' }\n      //    }\n      // console.log(event)\n      //    formData.append(\"file\", event[0])\n    };\n\n    this.onDrop = files => {\n      let formData = new FormData();\n      const config = {\n        header: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      console.log(files);\n      formData.append(\"file\", files[0]);\n      api.post('/api/movie/uploadfiles', formData, config).then(response => {\n        if (response.data.success) {\n          let variable = {\n            filePath: response.data.filePath,\n            fileName: response.data.fileName\n          };\n          setFilePath(response.data.filePath); //gerenate thumbnail with this filepath !\n\n          api.post('/api/movie/thumbnail', variable).then(response => {\n            if (response.data.success) {\n              this.setState(setDuration(response.data.fileDuration));\n              this.setState(setThumbnail(response.data.thumbsFilePath));\n            } else {\n              alert('Failed to make the thumbnails');\n            }\n          });\n        } else {\n          alert('failed to save the video in server');\n        }\n      });\n    };\n\n    this.handleIncludeMovie = async () => {\n      //const { name, rating, time, description, keywords, channel, channelid, likes, dislikes, views, comments, sharelink, videolink } = this.state\n      //const arrayTime = time.split('/')\n      //const payload = { name, rating, time: arrayTime, description, keywords, channel, channelid, likes, dislikes, views, comments, sharelink, videolink }\n      const {\n        name,\n        description,\n        keywords,\n        likes,\n        dislikes,\n        views,\n        videolink\n      } = this.state;\n      const payload = {\n        name,\n        description,\n        keywords,\n        likes,\n        dislikes,\n        views,\n        videolink\n      };\n      await api.insertMovie(payload).then(res => {\n        window.alert(`Movie inserted successfully`);\n        this.setState({\n          name: '',\n          //rating: '',\n          //time: '',\n          description: '',\n          keywords: '',\n          //channel: '',\n          //channelid: '',\n          likes: 0,\n          dislikes: 0,\n          views: 0,\n          //comments: '',\n          //sharelink: '',\n          videolink: ''\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      rating: '',\n      time: '',\n      description: '',\n      keywords: '',\n      channel: '',\n      channelid: '',\n      likes: 0,\n      dislikes: 0,\n      views: 0,\n      comments: '',\n      sharelink: '',\n      videolink: '',\n      FilePath: '',\n      setDuration: '',\n      setThumbnail: ''\n    };\n  }\n\n  render() {\n    const {\n      name,\n      rating,\n      time,\n      description,\n      keywords,\n      channel,\n      channelid,\n      likes,\n      dislikes,\n      views,\n      comments,\n      sharelink,\n      videolink\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: this.onDrop,\n          multiple: false,\n          maxSize: 800000000,\n          children: ({\n            getRootProps,\n            getInputProps\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '300px',\n              height: '240px',\n              border: '1px solid lightgray',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            ...getRootProps(),\n            children: /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), \"}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        type: \"text\",\n        value: name,\n        onChange: this.handleChangeInputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        type: \"text\",\n        value: description,\n        onChange: this.handleChangeInputDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"Keywords: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        type: \"text\",\n        value: keywords,\n        onChange: this.handleChangeInputKeywords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.handleIncludeMovie,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n        href: '/movies/list',\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MoviesInsert;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"InputText\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"CancelButton\");","map":{"version":3,"sources":["/Users/cristinalawson/CS179G/youtube-app/client/src/pages/MoviesInsert.jsx"],"names":["React","Component","api","Dropzone","styled","Title","h1","attrs","className","Wrapper","div","Label","label","InputText","input","Button","button","CancelButton","a","MoviesInsert","constructor","props","handleChangeInputName","event","name","target","value","setState","handleChangeInputRating","rating","validity","valid","state","handleChangeInputDescription","description","handleChangeInputKeywords","keywords","handleChangeInputTime","time","handleChangeInputVideo","video","onDrop","files","formData","FormData","config","header","console","log","append","post","then","response","data","success","variable","filePath","fileName","setFilePath","setDuration","fileDuration","setThumbnail","thumbsFilePath","alert","handleIncludeMovie","likes","dislikes","views","videolink","payload","insertMovie","res","window","channel","channelid","comments","sharelink","FilePath","render","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,KAAK,GAAGD,MAAM,CAACE,EAAP,CAAUC,KAAV,CAAgB;AAC1BC,EAAAA,SAAS,EAAE;AADe,CAAhB,CAEX,EAFH;KAAMH,K;AAIN,MAAMI,OAAO,GAAGL,MAAM,CAACM,GAAP,CAAWH,KAAX,CAAiB;AAC7BC,EAAAA,SAAS,EAAE;AADkB,CAAjB,CAEb;AACH;AACA,CAJA;MAAMC,O;AAMN,MAAME,KAAK,GAAGP,MAAM,CAACQ,KAAM;AAC3B;AACA,CAFA;MAAMD,K;AAIN,MAAME,SAAS,GAAGT,MAAM,CAACU,KAAP,CAAaP,KAAb,CAAmB;AACjCC,EAAAA,SAAS,EAAE;AADsB,CAAnB,CAEf;AACH;AACA,CAJA;MAAMK,S;AAMN,MAAME,MAAM,GAAGX,MAAM,CAACY,MAAP,CAAcT,KAAd,CAAoB;AAC/BC,EAAAA,SAAS,EAAG;AADmB,CAApB,CAEZ;AACH;AACA,CAJA;MAAMO,M;AAMN,MAAME,YAAY,GAAGb,MAAM,CAACc,CAAP,CAASX,KAAT,CAAe;AAChCC,EAAAA,SAAS,EAAG;AADoB,CAAf,CAElB;AACH;AACA,CAJA;MAAMS,Y;;AAMN,MAAME,YAAN,SAA2BlB,SAA3B,CAAqC;AACjCmB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAuBnBC,qBAvBmB,GAuBK,MAAMC,KAAN,IAAe;AACnC,YAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KA1BkB;;AAAA,SA4BnBI,uBA5BmB,GA4BO,MAAML,KAAN,IAAe;AACrC,YAAMM,MAAM,GAAGN,KAAK,CAACE,MAAN,CAAaK,QAAb,CAAsBC,KAAtB,GACTR,KAAK,CAACE,MAAN,CAAaC,KADJ,GAET,KAAKM,KAAL,CAAWH,MAFjB;AAIA,WAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACH,KAlCkB;;AAAA,SAoCnBI,4BApCmB,GAoCY,MAAMV,KAAN,IAAe;AAC1C,YAAMW,WAAW,GAAGX,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,WAAKC,QAAL,CAAc;AAAEO,QAAAA;AAAF,OAAd;AACH,KAvCkB;;AAAA,SAyCnBC,yBAzCmB,GAyCS,MAAMZ,KAAN,IAAe;AACvC,YAAMa,QAAQ,GAAGb,KAAK,CAACE,MAAN,CAAaC,KAA9B;AACA,WAAKC,QAAL,CAAc;AAAES,QAAAA;AAAF,OAAd;AACH,KA5CkB;;AAAA,SA8CnBC,qBA9CmB,GA8CK,MAAMd,KAAN,IAAe;AACnC,YAAMe,IAAI,GAAGf,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,WAAKC,QAAL,CAAc;AAAEW,QAAAA;AAAF,OAAd;AACH,KAjDkB;;AAAA,SAmDnBC,sBAnDmB,GAmDM,MAAMhB,KAAN,IAAe;AACpC,YAAMiB,KAAK,GAAGjB,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACA,WAAKC,QAAL,CAAc;AAAEa,QAAAA;AAAF,OAAd,EAFoC,CAIvC;AACA;AACA;AACA;AACA;AACA;AACA,KA7DkB;;AAAA,SA+DnBC,MA/DmB,GA+DTC,KAAD,IAAW;AAEhB,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAE;AAAE,0BAAgB;AAAlB;AADG,OAAf;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAC,MAAAA,QAAQ,CAACM,MAAT,CAAgB,MAAhB,EAAwBP,KAAK,CAAC,CAAD,CAA7B;AAEAxC,MAAAA,GAAG,CAACgD,IAAJ,CAAS,wBAAT,EAAmCP,QAAnC,EAA6CE,MAA7C,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AAEvB,cAAIC,QAAQ,GAAG;AACXC,YAAAA,QAAQ,EAAEJ,QAAQ,CAACC,IAAT,CAAcG,QADb;AAEXC,YAAAA,QAAQ,EAAEL,QAAQ,CAACC,IAAT,CAAcI;AAFb,WAAf;AAIAC,UAAAA,WAAW,CAACN,QAAQ,CAACC,IAAT,CAAcG,QAAf,CAAX,CANuB,CAQvB;;AAEAtD,UAAAA,GAAG,CAACgD,IAAJ,CAAS,sBAAT,EAAiCK,QAAjC,EACKJ,IADL,CACUC,QAAQ,IAAI;AACd,gBAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvB,mBAAK3B,QAAL,CAAcgC,WAAW,CAACP,QAAQ,CAACC,IAAT,CAAcO,YAAf,CAAzB;AACA,mBAAKjC,QAAL,CAAckC,YAAY,CAACT,QAAQ,CAACC,IAAT,CAAcS,cAAf,CAA1B;AACH,aAHD,MAGO;AACHC,cAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACJ,WARL;AAWH,SArBD,MAqBO;AACHA,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,OA1BL;AA4BH,KApGkB;;AAAA,SAsGnBC,kBAtGmB,GAsGE,YAAY;AAC7B;AACA;AACA;AAEA,YAAM;AAAExC,QAAAA,IAAF;AAAQU,QAAAA,WAAR;AAAqBE,QAAAA,QAArB;AAA+B6B,QAAAA,KAA/B;AAAsCC,QAAAA,QAAtC;AAAgDC,QAAAA,KAAhD;AAAuDC,QAAAA;AAAvD,UAAqE,KAAKpC,KAAhF;AACA,YAAMqC,OAAO,GAAG;AAAE7C,QAAAA,IAAF;AAAQU,QAAAA,WAAR;AAAqBE,QAAAA,QAArB;AAA+B6B,QAAAA,KAA/B;AAAsCC,QAAAA,QAAtC;AAAgDC,QAAAA,KAAhD;AAAuDC,QAAAA;AAAvD,OAAhB;AAGA,YAAMlE,GAAG,CAACoE,WAAJ,CAAgBD,OAAhB,EAAyBlB,IAAzB,CAA8BoB,GAAG,IAAI;AACvCC,QAAAA,MAAM,CAACT,KAAP,CAAc,6BAAd;AACA,aAAKpC,QAAL,CAAc;AACVH,UAAAA,IAAI,EAAE,EADI;AAEV;AACA;AACAU,UAAAA,WAAW,EAAE,EAJH;AAKVE,UAAAA,QAAQ,EAAE,EALA;AAMV;AACA;AACA6B,UAAAA,KAAK,EAAE,CARG;AASVC,UAAAA,QAAQ,EAAE,CATA;AAUVC,UAAAA,KAAK,EAAE,CAVG;AAWV;AACA;AACAC,UAAAA,SAAS,EAAE;AAbD,SAAd;AAeH,OAjBK,CAAN;AAkBH,KAjIkB;;AAGf,SAAKpC,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,EADG;AAETK,MAAAA,MAAM,EAAE,EAFC;AAGTS,MAAAA,IAAI,EAAE,EAHG;AAITJ,MAAAA,WAAW,EAAE,EAJJ;AAKTE,MAAAA,QAAQ,EAAE,EALD;AAMTqC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,SAAS,EAAE,EAPF;AAQTT,MAAAA,KAAK,EAAE,CARE;AASTC,MAAAA,QAAQ,EAAE,CATD;AAUTC,MAAAA,KAAK,EAAE,CAVE;AAWTQ,MAAAA,QAAQ,EAAE,EAXD;AAYTC,MAAAA,SAAS,EAAE,EAZF;AAaTR,MAAAA,SAAS,EAAE,EAbF;AAcTS,MAAAA,QAAQ,EAAE,EAdD;AAeTlB,MAAAA,WAAW,EAAE,EAfJ;AAgBTE,MAAAA,YAAY,EAAE;AAhBL,KAAb;AAkBH;;AA8GDiB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEtD,MAAAA,IAAF;AAAQK,MAAAA,MAAR;AAAgBS,MAAAA,IAAhB;AAAsBJ,MAAAA,WAAtB;AAAmCE,MAAAA,QAAnC;AAA6CqC,MAAAA,OAA7C;AAAsDC,MAAAA,SAAtD;AAAiET,MAAAA,KAAjE;AAAwEC,MAAAA,QAAxE;AAAkFC,MAAAA,KAAlF;AAAyFQ,MAAAA,QAAzF;AAAmGC,MAAAA,SAAnG;AAA8GR,MAAAA;AAA9G,QAA4H,KAAKpC,KAAvI;AACA,wBACI,QAAC,OAAD;AAAA,8BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,KAAK,EAAE;AAAE+C,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,gCACI,QAAC,QAAD;AACI,UAAA,MAAM,EAAE,KAAKvC,MADjB;AAEI,UAAA,QAAQ,EAAE,KAFd;AAGI,UAAA,OAAO,EAAE,SAHb;AAAA,oBAIK,CAAC;AAAEwC,YAAAA,YAAF;AAAgBC,YAAAA;AAAhB,WAAD,kBACG;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,MAAM,EAAE,OAA1B;AAAmCC,cAAAA,MAAM,EAAE,qBAA3C;AAAkEN,cAAAA,OAAO,EAAE,MAA3E;AAAmFO,cAAAA,UAAU,EAAE,QAA/F;AAAyGN,cAAAA,cAAc,EAAE;AAAzH,aAAZ;AAAA,eACSC,YAAY,EADrB;AAAA,mCAGI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAsBI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAE1D,IAFX;AAGI,QAAA,QAAQ,EAAE,KAAKF;AAHnB;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA6BI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ,eA8BI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEY,WAFX;AAGI,QAAA,QAAQ,EAAE,KAAKD;AAHnB;AAAA;AAAA;AAAA;AAAA,cA9BJ,eAoCI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ,eAqCI,QAAC,SAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEG,QAFX;AAGI,QAAA,QAAQ,EAAE,KAAKD;AAHnB;AAAA;AAAA;AAAA;AAAA,cArCJ,eA2CI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAK6B,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ,eA4CI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgDH;;AAtLgC;;AAyLrC,eAAe7C,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\nimport Dropzone from 'react-dropzone';\n//import { useSelector } from \"react-redux\";\n\nimport styled from 'styled-components'\n\nconst Title = styled.h1.attrs({\n    className: 'h1',\n})``\n\nconst Wrapper = styled.div.attrs({\n    className: 'form-group',\n})`\n    margin: 0 30px;\n`\n\nconst Label = styled.label`\n    margin: 5px;\n`\n\nconst InputText = styled.input.attrs({\n    className: 'form-control',\n})`\n    margin: 5px;\n`\n\nconst Button = styled.button.attrs({\n    className: `btn btn-primary`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nconst CancelButton = styled.a.attrs({\n    className: `btn btn-danger`,\n})`\n    margin: 15px 15px 15px 5px;\n`\n\nclass MoviesInsert extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            rating: '',\n            time: '',\n            description: '',\n            keywords: '',\n            channel: '',\n            channelid: '',\n            likes: 0,\n            dislikes: 0,\n            views: 0,\n            comments: '',\n            sharelink: '',\n            videolink: '',\n            FilePath: '',\n            setDuration: '',\n            setThumbnail: '',\n        }\n    }\n\n    handleChangeInputName = async event => {\n        const name = event.target.value\n        this.setState({ name })\n    }\n\n    handleChangeInputRating = async event => {\n        const rating = event.target.validity.valid\n            ? event.target.value\n            : this.state.rating\n\n        this.setState({ rating })\n    }\n\n    handleChangeInputDescription = async event => {\n        const description = event.target.value\n        this.setState({ description })\n    }\n\n    handleChangeInputKeywords = async event => {\n        const keywords = event.target.value\n        this.setState({ keywords })\n    }\n\n    handleChangeInputTime = async event => {\n        const time = event.target.value\n        this.setState({ time })\n    }\n\n    handleChangeInputVideo = async event => {\n        const video = event.target.value\n        this.setState({ video })\n\n     //    let formData = new FormData();\n     //    const config = {\n     //        header: { 'content-type': 'multipart/form-data' }\n     //    }\n     // console.log(event)\n     //    formData.append(\"file\", event[0])\n    }\n\n    onDrop = (files) => {\n\n        let formData = new FormData();\n        const config = {\n            header: { 'content-type': 'multipart/form-data' }\n        }\n        console.log(files)\n        formData.append(\"file\", files[0])\n\n        api.post('/api/movie/uploadfiles', formData, config)\n            .then(response => {\n                if (response.data.success) {\n\n                    let variable = {\n                        filePath: response.data.filePath,\n                        fileName: response.data.fileName\n                    }\n                    setFilePath(response.data.filePath)\n\n                    //gerenate thumbnail with this filepath !\n\n                    api.post('/api/movie/thumbnail', variable)\n                        .then(response => {\n                            if (response.data.success) {\n                                this.setState(setDuration(response.data.fileDuration))\n                                this.setState(setThumbnail(response.data.thumbsFilePath))\n                            } else {\n                                alert('Failed to make the thumbnails');\n                            }\n                        })\n\n\n                } else {\n                    alert('failed to save the video in server')\n                }\n            })\n\n    }\n\n    handleIncludeMovie = async () => {\n        //const { name, rating, time, description, keywords, channel, channelid, likes, dislikes, views, comments, sharelink, videolink } = this.state\n        //const arrayTime = time.split('/')\n        //const payload = { name, rating, time: arrayTime, description, keywords, channel, channelid, likes, dislikes, views, comments, sharelink, videolink }\n\n        const { name, description, keywords, likes, dislikes, views, videolink } = this.state\n        const payload = { name, description, keywords, likes, dislikes, views, videolink }\n\n\n        await api.insertMovie(payload).then(res => {\n            window.alert(`Movie inserted successfully`)\n            this.setState({\n                name: '',\n                //rating: '',\n                //time: '',\n                description: '',\n                keywords: '',\n                //channel: '',\n                //channelid: '',\n                likes: 0,\n                dislikes: 0,\n                views: 0,\n                //comments: '',\n                //sharelink: '',\n                videolink: '',\n            })\n        })\n    }\n\n    render() {\n        const { name, rating, time, description, keywords, channel, channelid, likes, dislikes, views, comments, sharelink, videolink } = this.state\n        return (\n            <Wrapper>\n                <Title>Upload Video</Title>\n\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Dropzone\n                        onDrop={this.onDrop}\n                        multiple={false}\n                        maxSize={800000000}>\n                        {({ getRootProps, getInputProps }) => (\n                            <div style={{ width: '300px', height: '240px', border: '1px solid lightgray', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n                                 {...getRootProps()}\n                            >\n                                <input {...getInputProps()} />\n\n                            </div>\n                        )}\n                    </Dropzone>\n\n                    }\n                </div>\n\n\n                <Label>Title: </Label>\n                <InputText\n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChangeInputName}\n                />\n\n                <Label>Description: </Label>\n                <InputText\n                    type=\"text\"\n                    value={description}\n                    onChange={this.handleChangeInputDescription}\n                />\n\n                <Label>Keywords: </Label>\n                <InputText\n                    type=\"text\"\n                    value={keywords}\n                    onChange={this.handleChangeInputKeywords}\n                />\n\n                <Button onClick={this.handleIncludeMovie}>Upload</Button>\n                <CancelButton href={'/movies/list'}>Cancel</CancelButton>\n            </Wrapper>\n        )\n    }\n}\n\nexport default MoviesInsert\n"]},"metadata":{},"sourceType":"module"}